// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_boltzmann_default
double get_boltzmann_default(arma::mat x, std::string base, bool relative);
RcppExport SEXP _belg_get_boltzmann_default(SEXP xSEXP, SEXP baseSEXP, SEXP relativeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type base(baseSEXP);
    Rcpp::traits::input_parameter< bool >::type relative(relativeSEXP);
    rcpp_result_gen = Rcpp::wrap(get_boltzmann_default(x, base, relative));
    return rcpp_result_gen;
END_RCPP
}
// get_boltzmann_aggregation
double get_boltzmann_aggregation(arma::mat x, std::string base, bool relative);
RcppExport SEXP _belg_get_boltzmann_aggregation(SEXP xSEXP, SEXP baseSEXP, SEXP relativeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::string >::type base(baseSEXP);
    Rcpp::traits::input_parameter< bool >::type relative(relativeSEXP);
    rcpp_result_gen = Rcpp::wrap(get_boltzmann_aggregation(x, base, relative));
    return rcpp_result_gen;
END_RCPP
}
// not_na_prop
double not_na_prop(const IntegerMatrix& x);
RcppExport SEXP _belg_not_na_prop(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(not_na_prop(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_belg_get_boltzmann_default", (DL_FUNC) &_belg_get_boltzmann_default, 3},
    {"_belg_get_boltzmann_aggregation", (DL_FUNC) &_belg_get_boltzmann_aggregation, 3},
    {"_belg_not_na_prop", (DL_FUNC) &_belg_not_na_prop, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_belg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
